{"version":3,"sources":["components/Heading.js","components/Images/Images.styled.js","components/Images/Images.js","components/LoadingComponents.js","App.styled.js","App.js","index.js"],"names":["StyledHeader","styled","header","StyledHeaderContent","h1","Heading","StyledImageWrapper","section","StyledImage","img","UnsplashImages","images","map","id","alt_description","regular","urls","src","alt","StyledOvalLoader","Loader","StyledThreeDotsLoader","OvalLoader","type","color","height","width","ThreeDots","GlobalStyle","createGlobalStyle","StyledError","h2","App","useState","setImages","error","setError","fetchImages","useCallback","a","apiLink","process","axios","get","data","response","errors","join","console","useEffect","length","pageStart","loadMore","hasMore","loader","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"klBAGA,IAAMA,EAAeC,IAAOC,OAAV,KASZC,EAAsBF,IAAOG,GAAV,KAeVC,EARC,WACd,OACE,cAACL,EAAD,UACE,cAACG,EAAD,2C,ybCpBC,IAAMG,EAAqBL,IAAOM,QAAV,KASlBC,EAAcP,IAAOQ,IAAV,KCOTC,EAdQ,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACxB,OACE,cAACL,EAAD,UACGK,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,gBAAyBC,EAAhC,EAAwBC,KAAQD,QAAhC,OACV,cAACP,EAAD,CAAsBS,IAAKF,EAASG,IAAKJ,GAAvBD,S,yUCJ1B,IAAMM,EAAmBlB,YAAOmB,IAAPnB,CAAH,KAOhBoB,EAAwBpB,YAAOmB,IAAPnB,CAAH,KAMdqB,EAAa,kBACxB,cAACH,EAAD,CAAkBI,KAAK,OAAOC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,MAGtDC,EAAY,kBACvB,cAACN,EAAD,CACEE,KAAK,YACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,M,yTCxBJ,IAAME,EAAcC,YAAH,KAWXC,EAAc7B,IAAO8B,GAAV,K,iBCyCTC,EA9CH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTtB,EADS,KACDuB,EADC,OAEUD,mBAAS,IAFnB,mBAETE,EAFS,KAEFC,EAFE,KAIVC,EAAcC,sBAAW,sBAAC,gCAAAC,EAAA,sEAEtBC,EAFsB,0DAEuCC,8CAFvC,2CAGLC,IAAMC,IAAIH,GAHL,gBAGpBI,EAHoB,EAGpBA,KACRV,EAAU,GAAD,mBAAKvB,GAAL,YAAgBiC,KAJG,gDAMO,kBAAxB,KAAMC,SAASD,KACxBR,EAAS,KAAMS,SAASD,MACf,KAAMC,SAASD,KAAKE,QAC7BV,EAAS,KAAMS,SAASD,KAAKE,OAAOC,KAAK,OAE3CC,QAAQb,MAAM,CAAEA,MAAK,OAXO,yDAa7B,CAACxB,IAMJ,OAJAsC,qBAAU,WACRZ,MACC,CAACA,IAGF,qCACE,cAACT,EAAD,IACA,qCACE,cAAC,EAAD,IACCO,IAAUxB,EAAOuC,OAAOA,QAAU,cAACpB,EAAD,UAAcK,IAChDxB,EAAOuC,OACN,cAAC,IAAD,CACEC,UAAW,EACXC,SAAUf,EACVgB,SAAS,EACTC,OAAQ,cAAC,EAAD,GAAgB,GAJ1B,SAME,cAAC,EAAD,CAAgB3C,OAAQA,MAG1B,cAAC,EAAD,WC3CV4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba07cc93.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled.header`\n  max-width: 100%;\n  height: 20vh;\n  margin: 20px 0px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\nconst StyledHeaderContent = styled.h1`\n  font-size: 50px;\n  @media (max-width: 374px) {\n    font-size: 30px;\n  }\n`;\n\nconst Heading = () => {\n  return (\n    <StyledHeader>\n      <StyledHeaderContent>Infinite Unsplash Gallery</StyledHeaderContent>\n    </StyledHeader>\n  );\n};\n\nexport default Heading;\n","import styled from 'styled-components';\n\nexport const StyledImageWrapper = styled.section`\n  max-width: 70%;\n  margin: 20px auto;\n  display: grid;\n  grid-gap: 70px;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-auto-rows: 350px;\n`;\n\nexport const StyledImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 20px;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.5);\n`;\n","import React from 'react';\nimport { StyledImage, StyledImageWrapper } from './Images.styled';\nimport PropTypes from 'prop-types';\n\nconst UnsplashImages = ({ images }) => {\n  return (\n    <StyledImageWrapper>\n      {images.map(({ id, alt_description, urls: { regular } }) => (\n        <StyledImage key={id} src={regular} alt={alt_description} />\n      ))}\n    </StyledImageWrapper>\n  );\n};\n\nUnsplashImages.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n\nexport default UnsplashImages;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport styled from 'styled-components';\n\nconst StyledOvalLoader = styled(Loader)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: calc(80vh - 40px);\n`;\n\nconst StyledThreeDotsLoader = styled(Loader)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const OvalLoader = () => (\n  <StyledOvalLoader type='Oval' color='#000000' height={70} width={70} />\n);\n\nexport const ThreeDots = () => (\n  <StyledThreeDotsLoader\n    type='ThreeDots'\n    color='#000000'\n    height={80}\n    width={80}\n  />\n);\n","import styled, { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  body{\n    font-family: 'Montserrat', sans-serif;\n  }\n`;\n\nexport const StyledError = styled.h2`\n  text-align: center;\n`;\n","import Heading from './components/Heading';\nimport UnsplashImages from './components/Images/Images';\nimport { OvalLoader, ThreeDots } from './components/LoadingComponents';\nimport axios from 'axios';\nimport { useEffect, useState, useCallback } from 'react';\nimport { StyledError, GlobalStyle } from './App.styled';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState('');\n\n  const fetchImages = useCallback(async () => {\n    try {\n      const apiLink = `http://api.unsplash.com/photos/random?client_id=${process.env.REACT_APP_UNSPLASH_ACC_KEY}&count=10&orientation=portrait`;\n      const { data } = await axios.get(apiLink);\n      setImages([...images, ...data]);\n    } catch (error) {\n      if (typeof error.response.data === 'string') {\n        setError(error.response.data);\n      } else if (error.response.data.errors) {\n        setError(error.response.data.errors.join(', '));\n      }\n      console.error({ error });\n    }\n  }, [images]);\n\n  useEffect(() => {\n    fetchImages();\n  }, [fetchImages]);\n\n  return (\n    <>\n      <GlobalStyle />\n      <>\n        <Heading />\n        {error && !images.length.length && <StyledError>{error}</StyledError>}\n        {images.length ? (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={fetchImages}\n            hasMore={true}\n            loader={<ThreeDots key={0} />}\n          >\n            <UnsplashImages images={images} />\n          </InfiniteScroll>\n        ) : (\n          <OvalLoader />\n        )}\n      </>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}